---
import { getI18n } from "../i18n/index.js";
import LangSwitcher from "./LangSwitcher.jsx";
const lang = Astro.url.pathname.startsWith("/en") ? "en" : "es";
const t = getI18n(lang);
const socials = [
  {
    id_social: "instagram",
    icon_social: "/icons/socials/header/instagram.svg",
    alt_social: "instagram",
  },
  {
    id_social: "whatsapp",
    icon_social: "/icons/socials/header/whatsapp.svg",
    alt_social: "whatsapp",
  },
  {
    id_social: "telegram",
    icon_social: "/icons/socials/header/telegram.svg",
    alt_social: "telegram",
  },
  {
    id_social: "facebook",
    icon_social: "/icons/socials/header/facebook.svg",
    alt_social: "facebook",
  },
  {
    id_social: "tiktok",
    icon_social: "/icons/socials/header/tiktok.svg",
    alt_social: "tiktok",
  },
];

const clientAccessOptions = t.header.clientAccessOptions.map(
  (label: string, idx: number) => ({
    id: ["portal", "dashboard", "reports", "support", "drive-cloud"][idx],
    label,
    href: [
      "/portal-cliente",
      "/dashboard",
      "/reportes",
      "/soporte",
      "/drive-cloud",
    ][idx],
  }),
);
---

<header
  id="header"
  class="flex justify-between items-center z-50 sticky pt-8 w-full"
>
  <a href="/" id="logo">
    <img
      src="/assets/logo-header.webp"
      alt="logo"
      class="w-auto h-12 object-contain"
    />
  </a>
  <div id="menu" class="space-x-10 text-xl text-deep-blue">
    <a class="hover:text-orange transition-colors duration-200" href=""
      >{t.header.home}</a
    >
    <a class="hover:text-orange transition-colors duration-200" href=""
      >{t.header.about}</a
    >
    <a class="hover:text-orange transition-colors duration-200" href=""
      >{t.header.services}</a
    >
    <div class="relative inline-block">
      <button
        id="client-access-btn"
        class="hover:text-orange transition-colors duration-200 flex items-center gap-1"
      >
        {t.header.clientAccess}
        <img
          id="dropdown-arrow"
          src="/icons/chevron-down.svg"
          alt="chevron-down"
          class="w-6 h-6"
        />
      </button>
      <div
        id="client-access-dropdown"
        class="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible transition-all duration-200 transform -translate-y-2"
      >
        {
          clientAccessOptions.map(
            (option: { id: string; label: string; href: string }) => (
              <a
                href={option.href}
                class="block px-4 py-3 text-sm text-deep-blue hover:bg-gray-50 hover:text-orange transition-colors duration-150 first:rounded-t-lg last:rounded-b-lg"
              >
                {option.label}
              </a>
            ),
          )
        }
      </div>
    </div>
    <a class="hover:text-orange transition-colors duration-200" href=""
      >{t.header.contact}</a
    >
  </div>
  <div id="socials" class="flex gap-6">
    {
      socials.map((social) => (
        <a href="" id={social.id_social}>
          <img
            src={social.icon_social}
            class="w-6 h-6"
            alt={social.alt_social}
            style="color: #335A83"
          />
        </a>
      ))
    }
  </div>
  <div class="relative inline-block text-deep-blue">
    <LangSwitcher client:only="react" />
  </div>
</header>

<style>
  #client-access-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  #dropdown-arrow.rotate {
    transform: rotate(180deg);
  }
  #lang-dropdown.show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  #lang-dropdown-arrow.rotate {
    transform: rotate(180deg);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const dropdownBtn = document.getElementById("client-access-btn");
    const dropdown = document.getElementById("client-access-dropdown");
    const arrow = document.getElementById("dropdown-arrow");

    if (!dropdownBtn || !dropdown || !arrow) {
      console.error("No se pudieron encontrar los elementos del dropdown");
      return;
    }

    dropdownBtn.addEventListener("click", function (e) {
      e.preventDefault();
      dropdown.classList.toggle("show");
      arrow.classList.toggle("rotate");
    });

    // Cerrar dropdown al hacer clic fuera
    document.addEventListener("click", function (e) {
      const target = e.target as Node;
      if (!dropdownBtn.contains(target) && !dropdown.contains(target)) {
        dropdown.classList.remove("show");
        arrow.classList.remove("rotate");
      }
    });

    // Cerrar dropdown al presionar Escape
    document.addEventListener("keydown", function (e) {
      if (e.key === "Escape") {
        dropdown.classList.remove("show");
        arrow.classList.remove("rotate");
      }
    });

    // Dropdown de idioma
    const langBtn = document.getElementById("lang-select-btn");
    const langDropdown = document.getElementById("lang-dropdown");
    const langArrow = document.getElementById("lang-dropdown-arrow");

    if (langBtn && langDropdown && langArrow) {
      langBtn.addEventListener("click", function (e) {
        e.preventDefault();
        langDropdown.classList.toggle("show");
        langArrow.classList.toggle("rotate");
      });
      document.addEventListener("click", function (e) {
        const target = e.target as Node;
        if (!langBtn.contains(target) && !langDropdown.contains(target)) {
          langDropdown.classList.remove("show");
          langArrow.classList.remove("rotate");
        }
      });
      document.addEventListener("keydown", function (e) {
        if (e.key === "Escape") {
          langDropdown.classList.remove("show");
          langArrow.classList.remove("rotate");
        }
      });
    }
  });
</script>
